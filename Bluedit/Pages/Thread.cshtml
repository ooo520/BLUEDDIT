@page "/b/{CategoryName}/t/{ThreadId:long}"
@using bluedit.Pages.Shared.Components
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model bluedit.Pages.ThreadModel
@{
	ViewData["Title"] = $"{Model.Thread.Title} - b/{Model.CategoryName}";
}

<style>
	h1 {
		font-size: 18px;
		font-weight: bold;
	}
</style>

<div class="answer">
	<h1>@Model.Thread.Title</h1>
	<div class="answer-top-info">
	@(await Html.RenderComponentAsync<Username>(RenderMode.ServerPrerendered, new { username = Model.Answers.First().User.Name }))
	<div>•</div>
	<div><time>@Model.Answers.First().CreationDate.ToLongDateString()</time></div>
	</div>
	<div>@Model.Answers.First().Content</div>
	<div class="thread-bottom-info">
		@(await Html.RenderComponentAsync<Opinions>(RenderMode.ServerPrerendered, new {
			isConnected = Model.isLoggedIn,
			answerId = Model.Answers.First().Id,
			answerLikes = Model.Answers.First().Likes
		}))
	</div>
</div>

@if (Model.isLoggedIn)
{
	<form method="post">
		<textarea name="comment" placeholder="Ecrivez un commentaire..."></textarea>
		<input type="submit" value="Commenter" />
	</form>
}
else
{
	<div><a href="/signup">Inscrivez-vous</a> ou <a href="/login">connectez-vous</a> pour participer à la discussion !</div>
}

<div class="answers">
	@foreach (bluedit.Dbo.Answer Answer in Model.Answers.Skip(1)) {
		<div class="answer">
			<div class="answer-top-info">
				@(await Html.RenderComponentAsync<Username>(RenderMode.ServerPrerendered, new { username = Answer.User.Name }))
				<div>•</div>
				<div><time>@Answer.CreationDate.ToLongDateString()</time></div>
			</div>
			<div>@Answer.Content</div>
			<div class="thread-bottom-info">
				@(await Html.RenderComponentAsync<Opinions>(RenderMode.ServerPrerendered, new { isConnected = Model.isLoggedIn, answerId = Answer.Id, answerLikes = Answer.Likes }))
			</div>
			@if (Answer != Model.Answers.Last())
			{
				<hr />
			}
		</div>
	}
</div>