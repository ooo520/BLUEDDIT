@page "/b/{CategoryName}/t/{ThreadId:long}"
@using bluedit.Pages.Shared.Components
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model bluedit.Pages.ThreadModel
@{
	ViewData["Title"] = $"{Model.Thread.Title} - b/{Model.CategoryName}";
}

<style>
	h1 {
		font-size: 1.125rem;
		font-weight: bold;
	}
</style>

<div class="root-answer">
	<h1>@Model.Thread.Title</h1>
	<div>@Model.Answers.First().User.Name</div>
	<div>@Model.Answers.First().Content</div>
	<div class="thread-bottom-info">
		@(await Html.RenderComponentAsync<Opinions>(RenderMode.ServerPrerendered, new {
			isConnected = Model.isLoggedIn,
			answerId = Model.Answers.First().Id,
			answerLikes = Model.Answers.First().Likes
		}))
		<div class="thread-answer-count">
			@(Model.Answers.Count - 1)
		</div>
	</div>
</div>

@if (Model.isLoggedIn)
{
	<form method="post">
		<textarea name="comment" placeholder="Ecrivez un commentaire..."></textarea>
		<input type="submit" value="Commenter" />
	</form>
}
else
{
	<a href="/signup">
		S'inscrire
	</a>
	<p>Déjà Blueditor ?</p>
	<a href="/login" >
		Se connecter
	</a>
}

<div class="answers">
	@foreach (bluedit.Dbo.Answer Answer in Model.Answers.Skip(1)) {
		<div class="answer">
			<div>@Answer.User.Name</div>
			<div>@Answer.Content</div>
			<div class="thread-bottom-info">
				@(await Html.RenderComponentAsync<Opinions>(RenderMode.ServerPrerendered, new { isConnected = Model.isLoggedIn, answerId = Answer.Id, answerLikes = Answer.Likes }))
			</div>
			<hr />
		</div>
	}
</div>