@page "/b/{CategoryName}"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model bluedit.Pages.CategoryModel
@{

}

<style>
	main {
		display: grid;
	}

	.category-header {
		display: flex;
		justify-content: space-between;
	}

	h1 {
		font-weight: bold;
	}

	.thread {
		border-radius: 5px;
		padding: 5px;
	}

		.thread:hover {
			cursor: pointer;
			background-color: rgb(237, 248, 250);
		}

	.thread-list {
		background-color: red;
	}

	.thread-top-info,
	.thread-bottom-info {
		display: flex;
	}

	.thread-bottom-info {
		column-gap: 10px;
	}

	.sorted-by {
		font-weight: bold;
	}

	.opinions,
	.thread-answer-count{
		display: flex;
		flex-direction: row;
		border-radius: 3rem;
		background-color: rgb(209, 236, 240);
		width: fit-content;
		padding: 5px;
		column-gap: 5px;
	}
</style>

<main>
	<div class="category-header" grid-area="header">
		<h1>@Model.Category.Title</h1>
		<a href="/b/@Model.CategoryName/new">Créer un fil de discussion</a>
	</div>

	<div class="options">
		<!-- Trié par -->
		<!-- <span class="sorted-by">Nouveautés</span>-->
		<select>
			<option>Nouveautés</option>
			<option>Top</option>
		</select>
	</div>
	<div class="threads-container" grid-area="threads">
		<div class="threads-list">
			@foreach (var Thread in Model.Threads)
			{
				// TODO: a view might be more appropriate
				// TODO: this shouldn't be necessary, actually, since thread has an
				//       answers property with a Count() method.
				//       However, in the current state, it seems to always return 0.
				long answerCount = Model._threadRepository.GetAnswerCountForThread(Thread.Id);

				<div class="thread">
					<div class="thread-top-info">
						<a href="/u/@Model.ThreadIdToRootAnswerMap[Thread.Id].User.Name">
							@Model.ThreadIdToRootAnswerMap[Thread.Id].User.Name
						</a>
						<span>@(" - ")</span>
						<span>@Model.ThreadIdToRootAnswerMap[Thread.Id].CreationDate.ToLongDateString()</span>
					</div>
					<a href="/b/@Model.CategoryName/t/@Thread.Id">
						<h2>@Thread.Title</h2>
					</a>
					<p>
						@Model.ThreadIdToRootAnswerMap[Thread.Id].Content
					</p>
					<div class="thread-bottom-info">
						<div class="opinions">
							<div>U</div>
							<div>X</div>
							<div>D</div>
						</div>
						<div class="thread-answer-count">
							@answerCount
						</div>
					</div>
				</div>
				@if (Thread != Model.Threads.Last())
				{
					<hr />
				}
			}
		</div>
	</div>
</main>