@page "/b/{CategoryName}"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model bluedit.Pages.CategoryModel
@{
	ViewData["Title"] = $"b/{Model.CategoryName}";
}

<style>
	:root {
		--answer-button-color: rgb(209, 236, 240);
	}

	main {
		display: grid;
	}

	time {
		color: #576F76;
	}

	.category-header {
		display: flex;
		justify-content: space-between;
	}

	h1 {
		font-weight: bold;
	}

	hr {
		margin: 0.1rem 0;
	}

	p {
		margin: 0;
	}

	.thread {
		display: flex;
		border-radius: 5px;
		padding-block: 5px;
		padding-inline: 10px;
		flex-direction: column;
		row-gap: 5px;
	}

		.thread:hover {
			background-color: rgb(237, 248, 250);
		}

	.threads-list {
		display: flex;
		flex-direction: column;
		row-gap: 3px;
	}

	.thread-top-info {
		font-size: 0.875rem;
		column-gap: 0.25rem;
	}

	.thread-top-info,
	.thread-bottom-info {
		display: flex;
	}

	.thread-bottom-info {
		column-gap: 0.25rem;
	}

	.thread-link {
		color: black;
		font-weight: bold;
		text-decoration: none;
	}

	.sorted-by {
		font-weight: bold;
	}

	.thread-answer-count {
		column-gap: 5px;
		padding-inline: 0.75rem;
	}

	.opinions,
	.thread-answer-count {
		display: flex;
		flex-direction: row;
		border-radius: 3rem;
		background-color: var(--answer-button-color);
		width: fit-content;
		height: 32px;
		align-items: center;
	}

	.vote-button {
		display: flex;
		align-items: center;
		justify-content: center;
		height: 100%;
		aspect-ratio: 1;
		border-radius: 100%;
		border: none;
		background-color: var(--answer-button-color);
	}

		.thread-answer-count:hover,
		.vote-button:hover {
			background-color: rgb(180, 219, 224);
		}
</style>

<main>
	<div class="category-header" grid-area="header">
		<h1>@Model.Category.Title</h1>
		<a href="/b/@Model.CategoryName/new">Créer un fil de discussion</a>
	</div>

	<div class="options">
		<!-- Trié par -->
		<form id="sortingForm" method="post">
			<div>
				<label for="search">Search:</label>
				<input type="text" name="SearchQuery" asp-for="SearchQuery" />
				<input type="submit"></input>
			</div>
			<div>
				<label for="sortingSelect">Sort by:</label>
				<select name="Sorting" id="sortingSelect" asp-for="Sorting" asp-items="Model.SortOptions"></select>
			</div>
		</form>

	</div>
	<div class="threads-container" grid-area="threads">
		<div class="threads-list">
			@if (Model.Threads != null && Model.Threads.Any())
			{
				<p>There is no threads</p>
			}
			@foreach (var Thread in Model.Threads)
			{
				// TODO: a view might be more appropriate
				// TODO: this shouldn't be necessary, actually, since thread has an
				//       answers property with a Count() method.
				//       However, in the current state, it seems to always return 0.
				var rootAnswer = Model._answerRepository.GetRootAnswerOfThread(Thread.Id);
				long answerCount = Model._threadRepository.GetAnswerCountForThread(Thread.Id);
				var user = Model._userRepository.GetById(rootAnswer.UserId)!;

				<div class="thread">
					<div class="thread-top-info">
						<div>
							<a class="thread-link" href="/u/@Model.ThreadIdToRootAnswerMap[Thread.Id].User.Name">
								u/@user.Name
						</a>
						</div>
						<div>•</div>
						<div><time>@Model.ThreadIdToRootAnswerMap[Thread.Id].CreationDate.ToLongDateString()</time></div>
					</div>
					<a class="thread-link" href="/b/@Model.CategoryName/t/@Thread.Id">
						@Thread.Title
					</a>
					<p class="thread-root-answer-content">
						@Model.ThreadIdToRootAnswerMap[Thread.Id].Content
					</p>
					<div class="thread-bottom-info">
						<div class="opinions">
							<button class="vote-button">
								<svg rpl="" fill="currentColor" height="16" icon-name="upvote-outline" viewBox="0 0 20 20" width="16" xmlns="http://www.w3.org/2000/svg"> <!--?lit$550198678$--><!--?lit$550198678$--><path d="M12.877 19H7.123A1.125 1.125 0 0 1 6 17.877V11H2.126a1.114 1.114 0 0 1-1.007-.7 1.249 1.249 0 0 1 .171-1.343L9.166.368a1.128 1.128 0 0 1 1.668.004l7.872 8.581a1.25 1.25 0 0 1 .176 1.348 1.113 1.113 0 0 1-1.005.7H14v6.877A1.125 1.125 0 0 1 12.877 19ZM7.25 17.75h5.5v-8h4.934L10 1.31 2.258 9.75H7.25v8ZM2.227 9.784l-.012.016c.01-.006.014-.01.012-.016Z"></path><!--?--> </svg>
							</button>
							<div>X</div>
							<button class="vote-button">
								<svg rpl="" fill="currentColor" height="16" icon-name="downvote-outline" viewBox="0 0 20 20" width="16" xmlns="http://www.w3.org/2000/svg"> <!--?lit$550198678$--><!--?lit$550198678$--><path d="M10 20a1.122 1.122 0 0 1-.834-.372l-7.872-8.581A1.251 1.251 0 0 1 1.118 9.7 1.114 1.114 0 0 1 2.123 9H6V2.123A1.125 1.125 0 0 1 7.123 1h5.754A1.125 1.125 0 0 1 14 2.123V9h3.874a1.114 1.114 0 0 1 1.007.7 1.25 1.25 0 0 1-.171 1.345l-7.876 8.589A1.128 1.128 0 0 1 10 20Zm-7.684-9.75L10 18.69l7.741-8.44H12.75v-8h-5.5v8H2.316Zm15.469-.05c-.01 0-.014.007-.012.013l.012-.013Z"></path><!--?--> </svg>
							</button>
						</div>
						<div class="thread-answer-count">
							<svg rpl="" fill="currentColor" width="20" height="20" icon-name="comment-outline" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
								<path d="M7.725 19.872a.718.718 0 0 1-.607-.328.725.725 0 0 1-.118-.397V16H3.625A2.63 2.63 0 0 1 1 13.375v-9.75A2.629 2.629 0 0 1 3.625 1h12.75A2.63 2.63 0 0 1 19 3.625v9.75A2.63 2.63 0 0 1 16.375 16h-4.161l-4 3.681a.725.725 0 0 1-.489.191ZM3.625 2.25A1.377 1.377 0 0 0 2.25 3.625v9.75a1.377 1.377 0 0 0 1.375 1.375h4a.625.625 0 0 1 .625.625v2.575l3.3-3.035a.628.628 0 0 1 .424-.165h4.4a1.377 1.377 0 0 0 1.375-1.375v-9.75a1.377 1.377 0 0 0-1.374-1.375H3.625Z"></path>
							</svg>
							@answerCount
						</div>
					</div>
				</div>
				@if (Thread != Model.Threads.Last())
				{
					<hr />
				}
			}
		</div>
	</div>
</main>
@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const sortingSelect = document.getElementById('sortingSelect');
			const filterForm = document.getElementById('filterForm');

			sortingSelect.addEventListener('change', function () {
				filterForm.submit(); // Submit the form when sorting option changes
			});
		});
	</script>
}